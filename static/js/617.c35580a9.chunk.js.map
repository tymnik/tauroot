{"version":3,"file":"static/js/617.c35580a9.chunk.js","mappings":"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","sources":["webpack://tauroot/./src/components/Banner/Banner.module.css?ede8","webpack://tauroot/./src/components/Banner/DownloadButtons/DownloadButtons.module.css?7616","components/Banner/DownloadButtons/DownloadButtons.jsx","webpack://tauroot/./src/components/Banner/BannerMenu/BannerMenu.module.css?bd88","components/Banner/BannerMenu/BannerMenu.jsx","webpack://tauroot/./src/components/Banner/Widget/Widget.module.css?a169","../node_modules/react-circular-progressbar/src/Path.tsx","../node_modules/react-circular-progressbar/src/CircularProgressbar.tsx","../node_modules/react-circular-progressbar/src/constants.ts","webpack://tauroot/./src/components/Banner/Widget/ProgressBarCircle/ProgressBarCircle.module.css?442d","components/Banner/Widget/ProgressBarCircle/ProgressBarCircle.jsx","webpack://tauroot/./src/components/Banner/Widget/ProgressBarRange/ProgressBarRange.module.css?3dd2","components/Banner/Widget/ProgressBarRange/ProgressBarRange.jsx","components/Banner/Widget/Widget.jsx","components/Banner/Banner.jsx","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"hero\":\"Banner_hero__-k1oK\",\"banner\":\"Banner_banner__7KCUI\",\"gradient-overlay\":\"Banner_gradient-overlay__teJ5+\",\"ava\":\"Banner_ava__kHx7H\",\"bannerText\":\"Banner_bannerText__UlgHo\",\"btnsBlock\":\"Banner_btnsBlock__SEzIL\",\"bannerMenuWrapper\":\"Banner_bannerMenuWrapper__mJftY\",\"barRangeComponent\":\"Banner_barRangeComponent__Ol524\",\"bannerMenuItemsDesktop\":\"Banner_bannerMenuItemsDesktop__xJboC\",\"bannerMenu\":\"Banner_bannerMenu__GENtD\",\"bannerMenuText\":\"Banner_bannerMenuText__XPI79\",\"bannerMenuOpen\":\"Banner_bannerMenuOpen__AQJgc\",\"bannerWidget\":\"Banner_bannerWidget__kpgB5\"};","// extracted by mini-css-extract-plugin\nexport default {\"buttonsList\":\"DownloadButtons_buttonsList__aRKfl\",\"androidBtn\":\"DownloadButtons_androidBtn__QGZW4\",\"iosBtn\":\"DownloadButtons_iosBtn__FaM73\",\"pcBtn\":\"DownloadButtons_pcBtn__OhVUF\"};","import React from 'react';\nimport icon from '../../../images/icons.svg';\nimport styles from './DownloadButtons.module.css';\n\nconst DownloadButtons = () => {\n  const handleDownload = platform => {\n    switch (platform) {\n      case 'android':\n        break;\n      case 'ios':\n        break;\n      case 'pc':\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <ul className={styles.buttonsList}>\n      <li>\n        <button\n          onClick={() => handleDownload('android')}\n          className={styles.androidBtn}\n          aria-label=\"Download for Android\"\n        >\n          <span>\n            <svg width=\"11\" height=\"13\" fill=\"var(--white)\">\n              <use xlinkHref={`${icon}#android`} />\n            </svg>\n          </span>\n          Android\n        </button>\n      </li>\n      <li>\n        <button\n          onClick={() => handleDownload('ios')}\n          className={styles.iosBtn}\n          aria-label=\"Download for iOS\"\n        >\n          <span>\n            <svg width=\"12\" height=\"13\" fill=\"var(--white)\">\n              <use xlinkHref={`${icon}#ios`} />\n            </svg>\n          </span>\n          iOS\n        </button>\n      </li>\n      <li>\n        <button\n          onClick={() => handleDownload('pc')}\n          className={styles.pcBtn}\n          aria-label=\"Download for PC\"\n        >\n          <span>\n            <svg width=\"17\" height=\"15\" fill=\"var(--white)\">\n              <use xlinkHref={`${icon}#download`} />\n            </svg>\n          </span>\n          Download on PC\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nexport default DownloadButtons;\n","// extracted by mini-css-extract-plugin\nexport default {\"bannerMenu\":\"BannerMenu_bannerMenu__k8d5O\",\"bannerContent\":\"BannerMenu_bannerContent__q2qDz\"};","import React from \"react\";\nimport styles from \"./BannerMenu.module.css\";\n\nconst BannerMenu = ({ items, active, setActive }) => {\n  return (\n    <div\n      className={active ? `${styles.bannerMenu} ${styles.active}` : styles.menu}\n      onClick={() => setActive(false)}\n    >\n      <ul className={styles.bannerContent}>\n        {items.map((item, index) => (\n          <li key={index}>{item.value}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default BannerMenu;\n","// extracted by mini-css-extract-plugin\nexport default {\"widget\":\"Widget_widget__NgO60\",\"widgetWrapper\":\"Widget_widgetWrapper__UkSNk\",\"textContainer\":\"Widget_textContainer__yeAgw\",\"widgetUsers\":\"Widget_widgetUsers__ZswSG\",\"widgetUsersAmount\":\"Widget_widgetUsersAmount__WFtPd\",\"widgetUserRating\":\"Widget_widgetUserRating__0H2lx\",\"userRatingScale\":\"Widget_userRatingScale__RPhrS\"};","import * as React from 'react';\nimport { VIEWBOX_CENTER_X, VIEWBOX_CENTER_Y } from './constants';\n\nfunction Path({\n  className,\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n  strokeWidth,\n  style,\n}: {\n  className?: string;\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n  strokeWidth: number;\n  style?: object;\n}) {\n  return (\n    <path\n      className={className}\n      style={Object.assign({}, style, getDashStyle({ pathRadius, dashRatio, counterClockwise }))}\n      d={getPathDescription({\n        pathRadius,\n        counterClockwise,\n      })}\n      strokeWidth={strokeWidth}\n      fillOpacity={0}\n    />\n  );\n}\n\n// SVG path description specifies how the path should be drawn\nfunction getPathDescription({\n  pathRadius,\n  counterClockwise,\n}: {\n  pathRadius: number;\n  counterClockwise: boolean;\n}) {\n  const radius = pathRadius;\n  const rotation = counterClockwise ? 1 : 0;\n\n  // Move to center of canvas\n  // Relative move to top canvas\n  // Relative arc to bottom of canvas\n  // Relative arc to top of canvas\n  return `\n      M ${VIEWBOX_CENTER_X},${VIEWBOX_CENTER_Y}\n      m 0,-${radius}\n      a ${radius},${radius} ${rotation} 1 1 0,${2 * radius}\n      a ${radius},${radius} ${rotation} 1 1 0,-${2 * radius}\n    `;\n}\n\nfunction getDashStyle({\n  counterClockwise,\n  dashRatio,\n  pathRadius,\n}: {\n  counterClockwise: boolean;\n  dashRatio: number;\n  pathRadius: number;\n}) {\n  const diameter = Math.PI * 2 * pathRadius;\n  const gapLength = (1 - dashRatio) * diameter;\n\n  return {\n    // Have dash be full diameter, and gap be full diameter\n    strokeDasharray: `${diameter}px ${diameter}px`,\n    // Shift dash backward by gapLength, so gap starts appearing at correct distance\n    strokeDashoffset: `${counterClockwise ? -gapLength : gapLength}px`,\n  };\n}\n\nexport default Path;\n","import * as React from 'react';\n\nimport {\n  VIEWBOX_WIDTH,\n  VIEWBOX_HEIGHT,\n  VIEWBOX_HEIGHT_HALF,\n  VIEWBOX_CENTER_X,\n  VIEWBOX_CENTER_Y,\n} from './constants';\nimport Path from './Path';\nimport { CircularProgressbarDefaultProps, CircularProgressbarProps } from './types';\n\nclass CircularProgressbar extends React.Component<CircularProgressbarProps> {\n  static defaultProps: CircularProgressbarDefaultProps = {\n    background: false,\n    backgroundPadding: 0,\n    circleRatio: 1,\n    classes: {\n      root: 'CircularProgressbar',\n      trail: 'CircularProgressbar-trail',\n      path: 'CircularProgressbar-path',\n      text: 'CircularProgressbar-text',\n      background: 'CircularProgressbar-background',\n    },\n    counterClockwise: false,\n    className: '',\n    maxValue: 100,\n    minValue: 0,\n    strokeWidth: 8,\n    styles: {\n      root: {},\n      trail: {},\n      path: {},\n      text: {},\n      background: {},\n    },\n    text: '',\n  };\n\n  getBackgroundPadding() {\n    if (!this.props.background) {\n      // Don't add padding if not displaying background\n      return 0;\n    }\n    return this.props.backgroundPadding;\n  }\n\n  getPathRadius() {\n    // The radius of the path is defined to be in the middle, so in order for the path to\n    // fit perfectly inside the 100x100 viewBox, need to subtract half the strokeWidth\n    return VIEWBOX_HEIGHT_HALF - this.props.strokeWidth / 2 - this.getBackgroundPadding();\n  }\n\n  // Ratio of path length to trail length, as a value between 0 and 1\n  getPathRatio() {\n    const { value, minValue, maxValue } = this.props;\n    const boundedValue = Math.min(Math.max(value, minValue), maxValue);\n    return (boundedValue - minValue) / (maxValue - minValue);\n  }\n\n  render() {\n    const {\n      circleRatio,\n      className,\n      classes,\n      counterClockwise,\n      styles,\n      strokeWidth,\n      text,\n    } = this.props;\n\n    const pathRadius = this.getPathRadius();\n    const pathRatio = this.getPathRatio();\n\n    return (\n      <svg\n        className={`${classes.root} ${className}`}\n        style={styles.root}\n        viewBox={`0 0 ${VIEWBOX_WIDTH} ${VIEWBOX_HEIGHT}`}\n        data-test-id=\"CircularProgressbar\"\n      >\n        {this.props.background ? (\n          <circle\n            className={classes.background}\n            style={styles.background}\n            cx={VIEWBOX_CENTER_X}\n            cy={VIEWBOX_CENTER_Y}\n            r={VIEWBOX_HEIGHT_HALF}\n          />\n        ) : null}\n\n        <Path\n          className={classes.trail}\n          counterClockwise={counterClockwise}\n          dashRatio={circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.trail}\n        />\n\n        <Path\n          className={classes.path}\n          counterClockwise={counterClockwise}\n          dashRatio={pathRatio * circleRatio}\n          pathRadius={pathRadius}\n          strokeWidth={strokeWidth}\n          style={styles.path}\n        />\n\n        {text ? (\n          <text\n            className={classes.text}\n            style={styles.text}\n            x={VIEWBOX_CENTER_X}\n            y={VIEWBOX_CENTER_Y}\n          >\n            {text}\n          </text>\n        ) : null}\n      </svg>\n    );\n  }\n}\n\nexport default CircularProgressbar;\n","export const VIEWBOX_WIDTH = 100;\nexport const VIEWBOX_HEIGHT = 100;\nexport const VIEWBOX_HEIGHT_HALF = 50;\nexport const VIEWBOX_CENTER_X = 50;\nexport const VIEWBOX_CENTER_Y = 50;\n","// extracted by mini-css-extract-plugin\nexport default {\"circularBarContainer\":\"ProgressBarCircle_circularBarContainer__PXyWt\",\"circularBackground\":\"ProgressBarCircle_circularBackground__H3Z+O\",\"circularBar\":\"ProgressBarCircle_circularBar__o9dpW\",\"barTextContent\":\"ProgressBarCircle_barTextContent__PvYId\"};","import React from 'react';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport styles from './ProgressBarCircle.module.css';\n\nfunction GradientSVG() {\n  const idCSS = 'linear-gradient-id';\n  const gradientTransform = `rotate(90)`;\n  return (\n    <svg styles={{ height: 0 }}>\n      <defs>\n        <linearGradient id={idCSS} gradientTransform={gradientTransform}>\n          <stop offset=\"16.29%\" stopColor=\"#FCC539\" />\n          <stop offset=\"85.56%\" stopColor=\"#DC4A19\" />\n        </linearGradient>\n      </defs>\n    </svg>\n  );\n}\n\nconst ProgressBarCircle = () => {\n  const value = 6.4;\n  return (\n    <div className={styles.circularBarContainer}>\n      <GradientSVG />\n      <div\n        className={styles.circularBackground}\n        style={{ width: '70px', height: '70px' }}\n      />\n      <div className={styles.circularBar}>\n        <CircularProgressbar\n          strokeWidth={10}\n          value={value}\n          maxValue={7.5}\n          styles={{\n            path: {\n              stroke: `url(#linear-gradient-id)`,\n              height: '100%',\n              strokeLinecap: 'butt',\n              transition: 'stroke-dashoffset 0.5s ease 0s',\n              transformOrigin: 'center center',\n            },\n            trail: {\n              stroke: 'rgba(0, 0, 0, 0.44)',\n            },\n          }}\n        />\n      </div>\n      <div className={styles.barTextContent}>{value}</div>\n    </div>\n  );\n};\n\nexport default ProgressBarCircle;\n","// extracted by mini-css-extract-plugin\nexport default {\"fieldGroup\":\"ProgressBarRange_fieldGroup__c68vV\",\"rangeField\":\"ProgressBarRange_rangeField__c9+YX\",\"barScale\":\"ProgressBarRange_barScale__DbDGz\",\"barScaleTitle\":\"ProgressBarRange_barScaleTitle__We49g\"};","import React, { useRef, useState } from 'react';\nimport styles from './ProgressBarRange.module.css';\n\nconst ProgressBarRange = ({ onVoteChange }) => {\n  const sliderRef = useRef(null);\n  const [background, setBackground] = useState('');\n\n  const handleInput = event => {\n    const { value } = event.target;\n    const percent = (value / event.target.max) * 100;\n    setBackground(\n      `linear-gradient(to right, #DC4A19 , #FCC539 ${percent}%, var(--progress-range-bg)${percent}%)`\n    );\n\n    onVoteChange(value);\n  };\n\n    return (\n    <div>\n      <div className={styles.fieldGroup}>\n        <label htmlFor=\"range\" className={styles.rangeLabel}>\n          <p className={styles.barScaleTitle}>Note</p>\n          <ul className={styles.barScale}>\n            <li>1</li>\n            <li>2</li>\n            <li>3</li>\n            <li>4</li>\n            <li>5</li>\n            <li>6</li>\n            <li>7</li>\n            <li>8</li>\n            <li>9</li>\n            <li>10</li>\n          </ul>\n        </label>\n        <input\n          ref={sliderRef}\n          type=\"range\"\n          name=\"range\"\n          id=\"range\"\n          className={styles.rangeField}\n          min={1}\n          max={10}\n          onInput={handleInput}\n          style={{ background }}\n          aria-label=\"A range field for voting\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressBarRange;\n","import React, { useState } from 'react';\nimport styles from './Widget.module.css';\n\nimport ProgressBarCircle from './ProgressBarCircle/ProgressBarCircle';\nimport ProgressBarRange from './ProgressBarRange/ProgressBarRange';\n\nconst Widget = () => {\n  const [userVote, setUserVote] = useState(0);\n\n  const handleVoteChange = vote => {\n    setUserVote(vote);\n  };\n\n  return (\n    <div className={styles.widget}>\n      <div className={styles.widgetWrapper}>\n        <div>\n          <ProgressBarCircle />\n        </div>\n        <div className={styles.textContainer}>\n          <h2 className={styles.widgetUsers}>Players</h2>\n          <p className={styles.widgetUsersAmount}>12 votes</p>\n          <h3 className={styles.widgetUserRating}>\n            Your rating:\n            <span className={styles.userRatingScale}>{userVote}</span>\n          </h3>\n        </div>\n      </div>\n      <div className={styles.widgetRange}>\n        <ProgressBarRange onVoteChange={handleVoteChange} />\n      </div>\n    </div>\n  );\n};\n\nexport default Widget;\n","import React, { useState } from 'react';\nimport avatar from '../../images/Banner/banner-ava.png';\nimport icon from '../../images/icons.svg';\nimport styles from './Banner.module.css';\n\nimport DownloadButtons from './DownloadButtons/DownloadButtons';\nimport BannerMenu from './BannerMenu/BannerMenu';\nimport Widget from './Widget/Widget';\n\nconst Banner = () => {\n  const [menuActive, setMenuActive] = useState(false);\n  const items = [\n    { value: 'Lorem Ipsum is simply dummy' },\n    { value: 'item' },\n    { value: 'item' },\n    { value: 'item' },\n    { value: 'item' },\n  ];\n\n  return (\n    <section className={styles.hero}>\n      <div className={styles.banner}>\n        <img src={avatar} alt=\"User avatar\" className={styles.ava} />\n        <h2 className={styles.bannerText}>Lorem Ipsum is simply dummy</h2>\n        <div className={styles.btnsBlock}>\n          <DownloadButtons />\n        </div>\n      </div>\n      <div className={styles.bannerMenuWrapper}>\n        <div className={styles.bannerMenuItemsDesktop}>\n          <BannerMenu items={items} />\n        </div>\n        <div className={styles.bannerMenu}>\n          <h3 className={styles.bannerMenuText}>More info</h3>\n          <button\n            type=\"button\"\n            className={styles.bannerMenuOpen}\n            onClick={() => setMenuActive(!menuActive)}\n            aria-label={menuActive ? 'Close menu' : 'Open menu'}\n          >\n            <svg width=\"20\" height=\"16\" fill=\"var(--main-text)\">\n              <use xlinkHref={`${icon}#banner-burger`} />\n            </svg>\n          </button>\n        </div>\n      </div>\n      <BannerMenu\n        items={items}\n        active={!menuActive}\n        setActive={setMenuActive}\n      />\n      <div className={styles.bannerWidget}>\n        <Widget />\n      </div>\n    </section>\n  );\n};\n\nexport default Banner;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["handleDownload","platform","_jsxs","className","styles","children","_jsx","onClick","width","height","fill","xlinkHref","concat","icon","_ref","items","active","setActive","map","item","index","value","Path","_a","counterClockwise","dashRatio","pathRadius","strokeWidth","style","React.createElement","Object","assign","getDashStyle","d","getPathDescription","fillOpacity","rotation","diameter","Math","PI","gapLength","strokeDasharray","strokeDashoffset","__extends","CircularProgressbar","this","props","background","backgroundPadding","getBackgroundPadding","minValue","maxValue","min","max","circleRatio","classes","text","getPathRadius","pathRatio","getPathRatio","root","viewBox","cx","cy","r","trail","path","x","y","React.Component","GradientSVG","id","gradientTransform","offset","stopColor","stroke","strokeLinecap","transition","transformOrigin","onVoteChange","sliderRef","useRef","_useState","useState","_useState2","_slicedToArray","setBackground","htmlFor","ref","type","name","onInput","event","target","percent","userVote","setUserVote","ProgressBarCircle","ProgressBarRange","vote","menuActive","setMenuActive","src","avatar","alt","DownloadButtons","BannerMenu","Widget","_arrayLikeToArray","arr","len","length","i","arr2","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","err","o","minLen","n","prototype","toString","slice","constructor","from","test","TypeError"],"sourceRoot":""}